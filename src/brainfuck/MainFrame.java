/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package brainfuck;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author johannes
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaCode = new javax.swing.JTextArea();
        buttonRun = new javax.swing.JButton();
        checkBox2Bytes = new javax.swing.JCheckBox();
        buttonSave = new javax.swing.JButton();
        buttonLoad = new javax.swing.JButton();

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Brainfuck");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        textAreaCode.setColumns(20);
        textAreaCode.setRows(5);
        textAreaCode.setAutoscrolls(false);
        jScrollPane1.setViewportView(textAreaCode);

        buttonRun.setText("Run");
        buttonRun.setActionCommand("buttonRun");
        buttonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRunActionPerformed(evt);
            }
        });

        checkBox2Bytes.setText("use 2 Bytes for Chars");

        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonLoad.setText("Load");
        buttonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonRun)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBox2Bytes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonLoad))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRun)
                    .addComponent(checkBox2Bytes)
                    .addComponent(buttonSave)
                    .addComponent(buttonLoad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE))
        );

        buttonRun.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRunActionPerformed
        ConsoleFrame.main(textAreaCode.getText(), checkBox2Bytes.isSelected());
    }//GEN-LAST:event_buttonRunActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        textAreaCode.setText("[ This program prints \"Hello World!\" and a newline to the screen, its\n" +
                            "  length is 106 active command characters [it is not the shortest.]\n" +
                            " \n" +
                            "  This loop is a \"comment loop\", it's a simple way of adding a comment\n" +
                            "  to a BF program such that you don't have to worry about any command\n" +
                            "  characters. Any \".\", \",\", \"+\", \"-\", \"<\" and \">\" characters are simply\n" +
                            "  ignored, the \"[\" and \"]\" characters just have to be balanced.\n" +
                            "]\n" +
                            "+++++ +++               Set Cell #0 to 8\n" +
                            "[\n" +
                            "    >++++               Add 4 to Cell #1; this will always set Cell #1 to 4\n" +
                            "    [                   as the cell will be cleared by the loop\n" +
                            "        >++             Add 2 to Cell #2\n" +
                            "        >+++            Add 3 to Cell #3\n" +
                            "        >+++            Add 3 to Cell #4\n" +
                            "        >+              Add 1 to Cell #5\n" +
                            "        <<<<-           Decrement the loop counter in Cell #1\n" +
                            "    ]                   Loop till Cell #1 is zero; number of iterations is 4\n" +
                            "    >+                  Add 1 to Cell #2\n" +
                            "    >+                  Add 1 to Cell #3\n" +
                            "    >-                  Subtract 1 from Cell #4\n" +
                            "    >>+                 Add 1 to Cell #6\n" +
                            "    [<]                 Move back to the first zero cell you find; this will\n" +
                            "                        be Cell #1 which was cleared by the previous loop\n" +
                            "    <-                  Decrement the loop Counter in Cell #0\n" +
                            "]                       Loop till Cell #0 is zero; number of iterations is 8\n" +
                            " \n" +
                            "The result of this is:\n" +
                            "Cell No :   0   1   2   3   4   5   6\n" +
                            "Contents:   0   0  72 104  88  32   8\n" +
                            "Pointer :   ^\n" +
                            " \n" +
                            ">>.                     Cell #2 has value 72 which is 'H'\n" +
                            ">---.                   Subtract 3 from Cell #3 to get 101 which is 'e'\n" +
                            "+++++++..+++.           Likewise for 'llo' from Cell #3\n" +
                            ">>.                     Cell #5 is 32 for the space\n" +
                            "<-.                     Subtract 1 from Cell #4 for 87 to give a 'W'\n" +
                            "<.                      Cell #3 was set to 'o' from the end of 'Hello'\n" +
                            "+++.------.--------.    Cell #3 for 'rl' and 'd'\n" +
                            ">>+.                    Add 1 to Cell #5 gives us an exclamation point\n" +
                            ">++.                    And finally a newline from Cell #6");
    }//GEN-LAST:event_formWindowOpened

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        writeFile();
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoadActionPerformed
        readFile();
    }//GEN-LAST:event_buttonLoadActionPerformed
        
    private File fileDialog(boolean open) {
        JFileChooser fileDialog = new JFileChooser();
        int result;
        if(open) {
            result = fileDialog.showOpenDialog(this);
        } else {
            result = fileDialog.showSaveDialog(this);
        }
        
        if(result == JFileChooser.APPROVE_OPTION) {
            return fileDialog.getSelectedFile();
        }
        
        return null;
    }
    
    private void readFile() {
        File file = fileDialog(true);
        String text = "";
        
        if(file != null) {
            if(file.exists()) {
                BufferedReader br = null;
                try {
                    String currentLine;
                    br = new BufferedReader(new FileReader(file));
                    
                    boolean firstLine = true;
                    while((currentLine = br.readLine()) != null) {
                        if(!firstLine) {
                            text += "\n";
                        } else {
                            firstLine = false;
                        }
                        
                        text += currentLine;
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Interpreter.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        if(br != null)
                            br.close();
                    } catch(IOException ex) {
                        Logger.getLogger(Interpreter.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    textAreaCode.setText(text);
                }
            }
        }
    }
    
    private void writeFile() {
        File file = fileDialog(false);
        String text = textAreaCode.getText();
        
        if(file != null) {
            
            BufferedWriter bw = null;
            try {
                bw = new BufferedWriter(new FileWriter(file));
                bw.write(text);
            } catch (IOException ex) {
                Logger.getLogger(Interpreter.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if(bw != null)
                        bw.close();
                } catch(IOException ex) {
                    Logger.getLogger(Interpreter.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonLoad;
    private javax.swing.JButton buttonRun;
    private javax.swing.JButton buttonSave;
    private javax.swing.JCheckBox checkBox2Bytes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea textAreaCode;
    // End of variables declaration//GEN-END:variables
}
